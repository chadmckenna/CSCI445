Chad McKenna
Reading 02


(2) Describe the two event flow models (capturing and bubbling).

	Event capturing is when the event that encapsulates another event fires first and then any encapsulated
	events fire afterwards. Event bubbling is when the encapsulated event fires first and it works its way
	backwards up the chain firing every event encapsulates the event that was just fired.

(4) Discuss innerHTML vs DOM methods (should be at least two paragraphs).

	InnerHTML is a method of building pages in Javascript and HTML. Its a really quick and easy way of doing
	such. It allows you to inject straight HTML into your page and it makes it quick and simple for developers
	to create dynamic webpages. It has problems, though. It is very generic and it is hard to build complex
	structures.
	On the other hand, the DOM (document object model) can be applicable in more than just dynamically building
	webpages. It can also be applied to XML which is what most of the world relies on to transmit data between
	two entities. Working with the DOM can be much more painful up front and requires learning more but it is 
	a much, much more powerful tool. 

(3) List the 3 kinds of browser shortcomings. Which is the worst? Why?

	Buggy support, missing support, and browser limitations. Buggy support is the worst because it forces
	developers to create browser workarounds which can break on other browsers or in later releases of the
	same browser.

(4) What is quirks mode? Why does it exist? How do you cause a browser to be in quirks mode? Would you write a page in quirks mode?

	Quirks mode is a process that browsers use to maintain backwards compatibility with old web pages. You
	would trigger quirks mode by setting the doctype to something unknown to the browser. I wouldn't ever want
	to write a page for quirks mode because it means that I have given up on web standards that were put in
	place for a good reason in order to appease the stupidity of Microsoft and their inability to make a compliant
	browser. But seriously, some companies (unfortunately) use IE 6 as their standard browser and sometimes you
	have to develop a page that meets these standards and it would probably be a good idea to kick a browser into
	quirks mode.  

(2) Explain X-UA-Compatible

	It allows IE browsers to pick what rendering engine they should use to render the page. This allows for pages
	that were designed to work on older versions of IE to render correctly in new versions. 

(4) Describe a common browser bug OR discuss hacking (as it applies to web pages). This should be several paragraphs.

	Hacking is the worst sometimes. It usually happens when you're developing the front-end of a web application
	and you run into browser incompatibilities with CSS. You're spend hours just trying to figure out what the problem
	is and once you figure out where in the code thats causing the problem, you'll then have to scour the internet
	to find the work around. Once you find the work around, you have to apply it to the CSS and usually it ends
	up breaking something in one of the other browsers. This is usually when you create a separate CSS file for
	Internet Explorer and then you use Javascript to switch between the CSS files that get linked to a page based on
	which browser is being used. This will usually solve your problem but it'll usually take way more time then necessary.
	Fortunately with IE9, your time spent hacking away and creating work arounds has been drastically decreased.

(3) What is the purpose of Dean Edward's JavaScript libraries? What are the drawbacks?

	It makes different versions of Internet Explorer work like standards compliant browsers. The drawbacks
	are that it doesn't work perfectly and it still has bugs. Also, it creates for overhead during each page
	load and it slows down page loads.
	
(2) Explain how local and global variables are created/used in JavaScript.

	A local variable is either passed in a function or it is designated by using "var x = 5;". A global variable is
	defined as one that doesn't use "var" and would be initiated by saying something like "bean = 12;".

